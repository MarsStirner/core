
package ru.korus.tmis.ws.laboratory.bak.ws.client;

import ru.korus.tmis.util.ConfigManager;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.Authenticator;
import java.net.MalformedURLException;
import java.net.PasswordAuthentication;
import java.net.URL;
import java.util.Map;


/**
 * WSDL File for cgmsoap HL7 edition
 * <p/>
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 */
@WebServiceClient(name = "CGM_SOAP",
        targetNamespace = "http://cgm.ru",
        wsdlLocation = "../../../../../../../../CGMSERVICE_pub.wsdl")
public class SendBakRequest extends Service {

    private final static URL CGMSOAP_WSDL_LOCATION;
    private final static WebServiceException CGMSOAP_EXCEPTION;
    private final static QName CGMSOAP_QNAME = new QName("http://cgm.ru", "CGM_SOAP");

    static {
        final String login = ConfigManager.getBakUser();
        final String password = ConfigManager.getBakPassword();

        if (login != null && password != null) {
            Authenticator.setDefault(new Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(
                            login,
                            password.toCharArray());
                }
            });
        }

        URL url = null;
        WebServiceException e = null;

        try {
            final URL baseUrl = SendBakRequest.class.getResource(".");
            url = new URL(baseUrl, "../../../../../../../../CGMSERVICE_pub.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CGMSOAP_WSDL_LOCATION = url;
        CGMSOAP_EXCEPTION = e;
    }

    public SendBakRequest() {
        super(__getWsdlLocation(), CGMSOAP_QNAME);
    }

    public SendBakRequest(WebServiceFeature... features) {
        super(__getWsdlLocation(), CGMSOAP_QNAME, features);
    }

    public SendBakRequest(URL wsdlLocation) {
        super(wsdlLocation, CGMSOAP_QNAME);
    }

    public SendBakRequest(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CGMSOAP_QNAME, features);
    }

    public SendBakRequest(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SendBakRequest(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * @return returns SendBakRequestWS
     */
    @WebEndpoint(name = "cgmsoap_PortType")
    public SendBakRequestWS getService() {
        final SendBakRequestWS service
                = super.getPort(new QName("http://cgm.ru", "cgmsoap_PortType"), SendBakRequestWS.class);
        configureServiceURL((BindingProvider) service);
        return service;
    }

    /**
     * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return returns SendBakRequestWS
     */
    @WebEndpoint(name = "cgmsoap_PortType")
    public SendBakRequestWS getService(WebServiceFeature... features) {
        final SendBakRequestWS service
                = super.getPort(new QName("http://cgm.ru", "cgmsoap_PortType"), SendBakRequestWS.class, features);
        configureServiceURL((BindingProvider) service);
        return service;
    }

    /**
     * Получаем URL до сервиса CGM
     *
     * @param service - объект сервиса, в который установим URL
     */
    private static void configureServiceURL(BindingProvider service) {
        final String serviceUrl = ConfigManager.getBakServiceUrl().toString();
        if (serviceUrl != null) {
            Map<String, Object> requestContext = service.getRequestContext();
            requestContext.put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, serviceUrl);
        }
    }

    private static URL __getWsdlLocation() {
        if (CGMSOAP_EXCEPTION != null) {
            throw CGMSOAP_EXCEPTION;
        }
        return CGMSOAP_WSDL_LOCATION;
    }

}
