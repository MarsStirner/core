
package org.hl7.v3;

import java.net.Authenticator;
import java.net.MalformedURLException;
import java.net.PasswordAuthentication;
import java.net.URL;
import java.util.Map;
import javax.xml.namespace.QName;
import javax.xml.ws.*;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "MISExchange", targetNamespace = "urn:hl7-org:v3", wsdlLocation = "http://app1c-01.app.fccho-moscow.ru/pharmacy3/ws/MISExchange?wsdl")
public class MISExchange
    extends Service
{

    private final static URL MISEXCHANGE_WSDL_LOCATION;
    private final static WebServiceException MISEXCHANGE_EXCEPTION;
    private final static QName MISEXCHANGE_QNAME = new QName("urn:hl7-org:v3", "MISExchange");

    static {
        Authenticator.setDefault(new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(
                        "admin",
                        "1234".toCharArray());
            }
        });
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://app1c-01.app.fccho-moscow.ru/pharmacy3/ws/MISExchange?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        MISEXCHANGE_WSDL_LOCATION = url;
        MISEXCHANGE_EXCEPTION = e;
    }

    public MISExchange() {
        super(__getWsdlLocation(), MISEXCHANGE_QNAME);
    }

    public MISExchange(WebServiceFeature... features) {
        super(__getWsdlLocation(), MISEXCHANGE_QNAME, features);
    }

    public MISExchange(URL wsdlLocation) {
        super(wsdlLocation, MISEXCHANGE_QNAME);
    }

    public MISExchange(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, MISEXCHANGE_QNAME, features);
    }

    public MISExchange(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MISExchange(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns MISExchangePortType
     */
    @WebEndpoint(name = "MISExchangeSoap")
    public MISExchangePortType getMISExchangeSoap() {
        final MISExchangePortType misExchangeSoap = super.getPort(new QName("urn:hl7-org:v3", "MISExchangeSoap"), MISExchangePortType.class);

        Map<String, Object> requestContext = ((BindingProvider)misExchangeSoap).getRequestContext();
       // requestContext.put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, "http://app1c-01.app.fccho-moscow.ru/pharmacy3/ws/MISExchange");
        requestContext.put(BindingProvider.USERNAME_PROPERTY, "admin");
        requestContext.put(BindingProvider.PASSWORD_PROPERTY, "1234");

        return misExchangeSoap;
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns MISExchangePortType
     */
    @WebEndpoint(name = "MISExchangeSoap")
    public MISExchangePortType getMISExchangeSoap(WebServiceFeature... features) {
        return super.getPort(new QName("urn:hl7-org:v3", "MISExchangeSoap"), MISExchangePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (MISEXCHANGE_EXCEPTION!= null) {
            throw MISEXCHANGE_EXCEPTION;
        }
        return MISEXCHANGE_WSDL_LOCATION;
    }

}
