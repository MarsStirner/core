
package ru.korus.tmis.ehr.ws.callback;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-2b01 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CallbackService", targetNamespace = "urn:wsdl", wsdlLocation = "file://CallbackService.wsdl")
public class CallbackService
    extends Service
{

    private final static URL CALLBACKSERVICE_WSDL_LOCATION;
    private final static WebServiceException CALLBACKSERVICE_EXCEPTION;
    private final static QName CALLBACKSERVICE_QNAME = new QName("urn:wsdl", "CallbackService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            final URL baseUrl = CallbackService.class.getResource("");
            url = new URL(baseUrl,  "../../../../../../classes/EHR/wsdl/CallbackService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CALLBACKSERVICE_WSDL_LOCATION = url;
        CALLBACKSERVICE_EXCEPTION = e;
    }

    public CallbackService() {
        super(__getWsdlLocation(), CALLBACKSERVICE_QNAME);
    }

    public CallbackService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CALLBACKSERVICE_QNAME, features);
    }

    public CallbackService(URL wsdlLocation) {
        super(wsdlLocation, CALLBACKSERVICE_QNAME);
    }

    public CallbackService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CALLBACKSERVICE_QNAME, features);
    }

    public CallbackService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CallbackService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns CallbackServiceSoap
     */
    @WebEndpoint(name = "CallbackServiceSoap")
    public CallbackServiceSoap getCallbackServiceSoap() {
        return super.getPort(new QName("urn:wsdl", "CallbackServiceSoap"), CallbackServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CallbackServiceSoap
     */
    @WebEndpoint(name = "CallbackServiceSoap")
    public CallbackServiceSoap getCallbackServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("urn:wsdl", "CallbackServiceSoap"), CallbackServiceSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CALLBACKSERVICE_EXCEPTION!= null) {
            throw CALLBACKSERVICE_EXCEPTION;
        }
        return CALLBACKSERVICE_WSDL_LOCATION;
    }

}
