
package ru.korus.tmis.ehr.ws;

import ru.korus.tmis.scala.util.ConfigManager;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.Map;
import javax.xml.namespace.QName;
import javax.xml.ws.*;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-2b01 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "QueryIEMKService", targetNamespace = "urn:wsdl", wsdlLocation = "file://QueryIEMKService.wsdl")
public class QueryIEMKService
    extends Service
{

    private final static URL QUERYIEMKSERVICE_WSDL_LOCATION;
    private final static WebServiceException QUERYIEMKSERVICE_EXCEPTION;
    private final static QName QUERYIEMKSERVICE_QNAME = new QName("urn:wsdl", "QueryIEMKService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            final URL baseUrl = QueryIEMKService.class.getResource("");
            url = new URL(baseUrl,  "../../../../../../classes/EHR/wsdl/QueryIEMKService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        QUERYIEMKSERVICE_WSDL_LOCATION = url;
        QUERYIEMKSERVICE_EXCEPTION = e;
    }

    public QueryIEMKService() {
        super(__getWsdlLocation(), QUERYIEMKSERVICE_QNAME);
    }

    public QueryIEMKService(WebServiceFeature... features) {
        super(__getWsdlLocation(), QUERYIEMKSERVICE_QNAME, features);
    }

    public QueryIEMKService(URL wsdlLocation) {
        super(wsdlLocation, QUERYIEMKSERVICE_QNAME);
    }

    public QueryIEMKService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, QUERYIEMKSERVICE_QNAME, features);
    }

    public QueryIEMKService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public QueryIEMKService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns QueryIEMKServiceSoap
     */
    @WebEndpoint(name = "QueryIEMKServiceSoap")
    public QueryIEMKServiceSoap getQueryIEMKServiceSoap() {
        //return super.getPort(new QName("urn:wsdl", "QueryIEMKServiceSoap"), QueryIEMKServiceSoap.class);
        //WS Addressing
        //EMRReceiverServiceSoap port = super.getPort(new QName("urn:wsdl", "EMRReceiverServiceSoap"), EMRReceiverServiceSoap.class, new AddressingFeature());
        QueryIEMKServiceSoap port = super.getPort(new QName("urn:wsdl", "QueryIEMKServiceSoap"), QueryIEMKServiceSoap.class);
        Map<String, Object> requestContext = ((BindingProvider) port).getRequestContext();
        requestContext.put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, ConfigManager.HealthShare().ServiceUrlEhr().toString());
        return port;
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns QueryIEMKServiceSoap
     */
    @WebEndpoint(name = "QueryIEMKServiceSoap")
    public QueryIEMKServiceSoap getQueryIEMKServiceSoap(WebServiceFeature... features) {
        return super.getPort(new QName("urn:wsdl", "QueryIEMKServiceSoap"), QueryIEMKServiceSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (QUERYIEMKSERVICE_EXCEPTION!= null) {
            throw QUERYIEMKSERVICE_EXCEPTION;
        }
        return QUERYIEMKSERVICE_WSDL_LOCATION;
    }

}
