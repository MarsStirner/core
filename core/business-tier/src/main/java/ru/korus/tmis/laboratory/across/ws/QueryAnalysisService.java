package ru.korus.tmis.laboratory.across.ws;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2016-04-18T20:51:37.863+04:00
 * Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "QueryAnalysisService", 
                  wsdlLocation = "file:/C:/Users/eupatov/Desktop/10.1.0.109.xml",
                  targetNamespace = "ru.novolabs.Integration.FTMIS") 
public class QueryAnalysisService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("ru.novolabs.Integration.FTMIS", "QueryAnalysisService");
    public final static QName FTMISEndpoint = new QName("ru.novolabs.Integration.FTMIS", "FTMISEndpoint");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/eupatov/Desktop/10.1.0.109.xml");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(QueryAnalysisService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/eupatov/Desktop/10.1.0.109.xml");
        }
        WSDL_LOCATION = url;
    }

    public QueryAnalysisService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public QueryAnalysisService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public QueryAnalysisService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public QueryAnalysisService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public QueryAnalysisService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public QueryAnalysisService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns IqueryAnalysis
     */
    @WebEndpoint(name = "FTMISEndpoint")
    public IqueryAnalysis getFTMISEndpoint() {
        return super.getPort(FTMISEndpoint, IqueryAnalysis.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IqueryAnalysis
     */
    @WebEndpoint(name = "FTMISEndpoint")
    public IqueryAnalysis getFTMISEndpoint(WebServiceFeature... features) {
        return super.getPort(FTMISEndpoint, IqueryAnalysis.class, features);
    }

}
