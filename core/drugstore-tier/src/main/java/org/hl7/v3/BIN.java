//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.05.16 at 03:07:22 PM MSD 
//


package org.hl7.v3;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlMixed;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * Binary accept is a raw block of bits. Binary accept is a protected type that MUST
 * not be used outside the accept type specification.
 * <p/>
 * <p/>
 * <p>Java class for BIN complex type.
 * <p/>
 * <p>The following schema fragment specifies the expected content contained
 * within this class.
 * <p/>
 * <pre>
 * &lt;complexType name="BIN">
 *   &lt;complexContent>
 *     &lt;extension base="{urn:hl7-org:v3}ANY">
 *       &lt;attribute name="representation" type="{urn:hl7-org:v3}BinaryDataEncoding"
 * default="TXT" />
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BIN")
@XmlSeeAlso(
        {
                ED.class
        })
public abstract class BIN
        extends ANY {

    @XmlAttribute
    protected BinaryDataEncoding representation;

    // CUSTOM STUFF
    @XmlMixed
    protected List<Serializable> content = new ArrayList<Serializable>();

    public List<Serializable> getContent() {
        return content;
    }
    // END OF CUSTOM STUFF

    /**
     * Gets the value of the representation property.
     *
     * @return possible object is {@link BinaryDataEncoding }
     */
    public BinaryDataEncoding getRepresentation() {
        if (representation == null) {
            return BinaryDataEncoding.TXT;
        } else {
            return representation;
        }
    }

    /**
     * Sets the value of the representation property.
     *
     * @param value allowed object is {@link BinaryDataEncoding }
     */
    public void setRepresentation(BinaryDataEncoding value) {
        this.representation = value;
    }

}
